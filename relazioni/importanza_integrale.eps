%!PS-Adobe-2.0
%%Title: ../data/plot.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Thu Apr  5 17:26:44 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -33 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../data/plot.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (carlo)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Apr  5 17:26:44 2012)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Verdana) findfont 100 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
/Verdana findfont 100 scalefont setfont
/Verdana findfont 100 scalefont setfont
/Verdana findfont 100 scalefont setfont
1.500 UL
LTb
1.000 UL
LTa
490 320 M
6529 0 V
stroke
1.500 UL
LTb
490 320 M
63 0 V
6466 0 R
-63 0 V
stroke
430 320 M
[ [(Verdana) 100.0 0.0 true true 0 ( 0.4)]
] -33.3 MRshow
1.500 UL
LTb
1.000 UL
LTa
490 1057 M
6529 0 V
stroke
1.500 UL
LTb
490 1057 M
63 0 V
6466 0 R
-63 0 V
stroke
430 1057 M
[ [(Verdana) 100.0 0.0 true true 0 ( 0.5)]
] -33.3 MRshow
1.500 UL
LTb
1.000 UL
LTa
490 1793 M
6529 0 V
stroke
1.500 UL
LTb
490 1793 M
63 0 V
6466 0 R
-63 0 V
stroke
430 1793 M
[ [(Verdana) 100.0 0.0 true true 0 ( 0.6)]
] -33.3 MRshow
1.500 UL
LTb
1.000 UL
LTa
490 2529 M
6529 0 V
stroke
1.500 UL
LTb
490 2529 M
63 0 V
6466 0 R
-63 0 V
stroke
430 2529 M
[ [(Verdana) 100.0 0.0 true true 0 ( 0.7)]
] -33.3 MRshow
1.500 UL
LTb
1.000 UL
LTa
490 3266 M
6529 0 V
stroke
1.500 UL
LTb
490 3266 M
63 0 V
6466 0 R
-63 0 V
stroke
430 3266 M
[ [(Verdana) 100.0 0.0 true true 0 ( 0.8)]
] -33.3 MRshow
1.500 UL
LTb
1.000 UL
LTa
490 4002 M
6529 0 V
stroke
1.500 UL
LTb
490 4002 M
63 0 V
6466 0 R
-63 0 V
stroke
430 4002 M
[ [(Verdana) 100.0 0.0 true true 0 ( 0.9)]
] -33.3 MRshow
1.500 UL
LTb
1.000 UL
LTa
490 4739 M
6529 0 V
stroke
1.500 UL
LTb
490 4739 M
63 0 V
6466 0 R
-63 0 V
stroke
430 4739 M
[ [(Verdana) 100.0 0.0 true true 0 ( 1)]
] -33.3 MRshow
1.500 UL
LTb
1.000 UL
LTa
490 320 M
0 4419 V
stroke
1.500 UL
LTb
490 320 M
0 63 V
0 4356 R
0 -63 V
stroke
490 220 M
[ [(Verdana) 100.0 0.0 true true 0 ( 100)]
] -33.3 MCshow
1.500 UL
LTb
1145 320 M
0 31 V
0 4388 R
0 -31 V
1528 320 M
0 31 V
0 4388 R
0 -31 V
1800 320 M
0 31 V
0 4388 R
0 -31 V
2011 320 M
0 31 V
0 4388 R
0 -31 V
2184 320 M
0 31 V
0 4388 R
0 -31 V
2329 320 M
0 31 V
0 4388 R
0 -31 V
2455 320 M
0 31 V
0 4388 R
0 -31 V
2567 320 M
0 31 V
0 4388 R
0 -31 V
stroke
1.000 UL
LTa
2666 320 M
0 4419 V
stroke
1.500 UL
LTb
2666 320 M
0 63 V
0 4356 R
0 -63 V
stroke
2666 220 M
[ [(Verdana) 100.0 0.0 true true 0 ( 1000)]
] -33.3 MCshow
1.500 UL
LTb
3321 320 M
0 31 V
0 4388 R
0 -31 V
3705 320 M
0 31 V
0 4388 R
0 -31 V
3977 320 M
0 31 V
0 4388 R
0 -31 V
4188 320 M
0 31 V
0 4388 R
0 -31 V
4360 320 M
0 31 V
0 4388 R
0 -31 V
4506 320 M
0 31 V
0 4388 R
0 -31 V
4632 320 M
0 31 V
0 4388 R
0 -31 V
4743 320 M
0 31 V
0 4388 R
0 -31 V
stroke
1.000 UL
LTa
4843 320 M
0 4419 V
stroke
1.500 UL
LTb
4843 320 M
0 63 V
0 4356 R
0 -63 V
stroke
4843 220 M
[ [(Verdana) 100.0 0.0 true true 0 ( 10000)]
] -33.3 MCshow
1.500 UL
LTb
5498 320 M
0 31 V
0 4388 R
0 -31 V
5881 320 M
0 31 V
0 4388 R
0 -31 V
6153 320 M
0 31 V
0 4388 R
0 -31 V
6364 320 M
0 31 V
0 4388 R
0 -31 V
6536 320 M
0 31 V
0 4388 R
0 -31 V
6682 320 M
0 31 V
0 4388 R
0 -31 V
6808 320 M
0 31 V
0 4388 R
0 -31 V
6919 320 M
0 31 V
0 4388 R
0 -31 V
stroke
1.000 UL
LTa
7019 320 M
0 4419 V
stroke
1.500 UL
LTb
7019 320 M
0 63 V
0 4356 R
0 -63 V
stroke
7019 220 M
[ [(Verdana) 100.0 0.0 true true 0 ( 100000)]
] -33.3 MCshow
1.500 UL
LTb
1.500 UL
LTb
490 4739 N
490 320 L
6529 0 V
0 4419 V
-6529 0 V
Z stroke
LCb setrgbcolor
80 2529 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Verdana) 100.0 0.0 true true 0 (Valore integrale)]
] -33.3 MCshow
grestore
LTb
LCb setrgbcolor
3754 70 M
[ [(Verdana) 100.0 0.0 true true 0 (N\))]
] -33.3 MCshow
LTb
3754 4889 M
[ [(Verdana) 100.0 0.0 true true 0 (Campionamento importanza)]
] -33.3 MCshow
1.000 UP
1.500 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Verdana findfont 100 scalefont setfont
LCb setrgbcolor
6536 4626 M
('../data/flat.dat') Rshow
LT0
6596 4626 M
303 0 V
-303 31 R
0 -62 V
303 62 R
0 -62 V
2666 1033 M
0 1943 V
2635 1033 M
62 0 V
-62 1943 R
62 0 V
2666 1141 M
0 2610 V
2635 1141 M
62 0 V
-62 2610 R
62 0 V
3321 533 M
0 1332 V
3290 533 M
62 0 V
-62 1332 R
62 0 V
-31 643 R
0 1982 V
3290 2508 M
62 0 V
-62 1982 R
62 0 V
3977 787 M
0 913 V
3946 787 M
62 0 V
-62 913 R
62 0 V
-31 864 R
0 1394 V
3946 2564 M
62 0 V
-62 1394 R
62 0 V
4632 546 M
0 615 V
4601 546 M
62 0 V
-62 615 R
62 0 V
-31 1542 R
0 977 V
-31 -977 R
62 0 V
-62 977 R
62 0 V
5287 748 M
0 439 V
5256 748 M
62 0 V
-62 439 R
62 0 V
-31 1393 R
0 665 V
-31 -665 R
62 0 V
-62 665 R
62 0 V
5942 1128 M
0 328 V
-31 -328 R
62 0 V
-62 328 R
62 0 V
-31 1409 R
0 483 V
-31 -483 R
62 0 V
-62 483 R
62 0 V
2666 2004 Pls
2666 2446 Pls
3321 1199 Pls
3321 3499 Pls
3977 1243 Pls
3977 3261 Pls
4632 853 Pls
4632 3191 Pls
5287 968 Pls
5287 2913 Pls
5942 1292 Pls
5942 3107 Pls
6747 4626 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Verdana findfont 100 scalefont setfont
LCb setrgbcolor
6536 4526 M
('../data/gauss.dat') Rshow
LT1
6596 4526 M
303 0 V
-303 31 R
0 -62 V
303 62 R
0 -62 V
2666 831 M
0 329 V
2635 831 M
62 0 V
-62 329 R
62 0 V
-31 1393 R
0 1291 V
2635 2553 M
62 0 V
-62 1291 R
62 0 V
3321 1029 M
0 232 V
-31 -232 R
62 0 V
-62 232 R
62 0 V
-31 1079 R
0 737 V
-31 -737 R
62 0 V
-62 737 R
62 0 V
3977 1049 M
0 170 V
-31 -170 R
62 0 V
-62 170 R
62 0 V
-31 1176 R
0 579 V
-31 -579 R
62 0 V
-62 579 R
62 0 V
4632 1124 M
0 119 V
-31 -119 R
62 0 V
-62 119 R
62 0 V
-31 1766 R
0 427 V
-31 -427 R
62 0 V
-62 427 R
62 0 V
5287 1057 M
0 83 V
-31 -83 R
62 0 V
-62 83 R
62 0 V
-31 1443 R
0 272 V
-31 -272 R
62 0 V
-62 272 R
62 0 V
5942 1009 M
0 58 V
-31 -58 R
62 0 V
-62 58 R
62 0 V
-31 1719 R
0 194 V
-31 -194 R
62 0 V
-62 194 R
62 0 V
2666 995 Crs
2666 3199 Crs
3321 1145 Crs
3321 2708 Crs
3977 1134 Crs
3977 2684 Crs
4632 1183 Crs
4632 3223 Crs
5287 1098 Crs
5287 2719 Crs
5942 1038 Crs
5942 2883 Crs
6747 4526 Crs
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Verdana findfont 100 scalefont setfont
LCb setrgbcolor
6536 4426 M
('../data/root.dat') Rshow
LT2
6596 4426 M
303 0 V
-303 31 R
0 -62 V
303 62 R
0 -62 V
2666 926 M
0 147 V
2635 926 M
62 0 V
-62 147 R
62 0 V
-31 1776 R
0 241 V
-31 -241 R
62 0 V
-62 241 R
62 0 V
3321 999 M
0 104 V
3290 999 M
62 0 V
-62 104 R
62 0 V
-31 1640 R
0 172 V
-31 -172 R
62 0 V
-62 172 R
62 0 V
3977 997 M
0 73 V
-31 -73 R
62 0 V
-62 73 R
62 0 V
-31 1647 R
0 122 V
-31 -122 R
62 0 V
-62 122 R
62 0 V
4632 1032 M
0 52 V
-31 -52 R
62 0 V
-62 52 R
62 0 V
-31 1744 R
0 86 V
-31 -86 R
62 0 V
-62 86 R
62 0 V
5287 1023 M
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
-31 1879 R
0 60 V
-31 -60 R
62 0 V
-62 60 R
62 0 V
5942 1030 M
0 25 V
-31 -25 R
62 0 V
-62 25 R
62 0 V
-31 1827 R
0 42 V
-31 -42 R
62 0 V
-62 42 R
62 0 V
2666 999 Star
2666 2970 Star
3321 1051 Star
3321 2829 Star
3977 1034 Star
3977 2778 Star
4632 1058 Star
4632 2871 Star
5287 1041 Star
5287 2968 Star
5942 1042 Star
5942 2903 Star
6747 4426 Star
% End plot #3
1.500 UL
LTb
490 4739 N
490 320 L
6529 0 V
0 4419 V
-6529 0 V
Z stroke
1.000 UP
1.500 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Verdana
%%Pages: 1
